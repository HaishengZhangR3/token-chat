apply plugin: 'kotlin'
apply plugin: 'kotlin-jpa'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

jar.baseName = "chat-flows"

cordapp {
    targetPlatformVersion 4
    minimumPlatformVersion 4
    contract {
        name "Chat SDK - Flows"
        vendor "R3"
        licence "Apache 2"
        versionId 1
    }
    signing {
        enabled false
    }
}

dependencies {
    //contracts and states dependency.
    cordapp project(":contracts")

    // Kotlin.
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // Corda integration dependencies.
    cordaCompile("$corda_release_group:corda-core:$corda_release_version")

    cordaCompile "$confidential_id_release_group:ci-workflows:$confidential_id_release_version"
    cordaCompile "$accounts_release_group:accounts-workflows:$accounts_release_version"

    cordaCompile "$tokens_release_group:tokens-contracts:$tokens_release_version"
    cordaCompile "$tokens_release_group:tokens-workflows:$tokens_release_version"
    cordaCompile "$tokens_release_group:tokens-selection:$tokens_release_version"
    cordaCompile "$tokens_release_group:tokens-money:$tokens_release_version"

    // Testing.
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"
}

sourceSets {
    workflows {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/main/kotlin')
        }
    }
}
