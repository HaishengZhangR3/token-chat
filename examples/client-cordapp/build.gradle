buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda'
        }
        mavenLocal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

jar.baseName = "client-cordapp"

cordapp {
    targetPlatformVersion 4
    minimumPlatformVersion 4
    contract {
        name "Supply Chain CorDapp"
        vendor "R3"
        licence "Apache 2"
        versionId 1
    }
    signing {
        enabled false
    }
}

dependencies {
    // Chat.
    cordapp project(":workflows")
    cordapp project(":contracts")

    // Kotlin.
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8'

    // Corda integration dependencies.
    cordaCompile("$corda_release_group:corda-core:$corda_release_version") {
        changing = true
    }
    cordaCompile("$corda_release_group:corda-node:$corda_release_version") {
        changing = true
    }

    // Testing.
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"

    compile 'org.java-websocket:Java-WebSocket:1.4.0'

}

sourceSets {
    loc {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/main/kotlin')
        }
    }
}

task loc(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.loc.output.classesDirs
    classpath = sourceSets.loc.runtimeClasspath
}

jar {
    baseName = "client-cordapp"
    version = "1.0.0.0"
}
